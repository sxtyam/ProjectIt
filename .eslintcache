[{"C:\\Users\\91997\\Desktop\\ProjectIt\\src\\index.js":"1","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\routes.js":"2","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\reportWebVitals.js":"3","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Home.js":"4","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Profile\\Profile.js":"5","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Project\\AllProjects.js":"6","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Project\\Project.js":"7","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Login\\Login.js":"8","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Project\\AddProject.js":"9","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Signup\\Signup.js":"10","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\card.js":"11","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Project\\CardProject.js":"12","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Common\\Navbar.js":"13","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Common\\Footer.js":"14"},{"size":574,"mtime":1611949214851,"results":"15","hashOfConfig":"16"},{"size":1142,"mtime":1613295571970,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1611322753409,"results":"18","hashOfConfig":"16"},{"size":7831,"mtime":1613311273898,"results":"19","hashOfConfig":"16"},{"size":2827,"mtime":1613234641749,"results":"20","hashOfConfig":"16"},{"size":1227,"mtime":1613064263154,"results":"21","hashOfConfig":"16"},{"size":3240,"mtime":1613234556962,"results":"22","hashOfConfig":"16"},{"size":3300,"mtime":1613295627817,"results":"23","hashOfConfig":"16"},{"size":6488,"mtime":1613295627819,"results":"24","hashOfConfig":"16"},{"size":6731,"mtime":1613319685328,"results":"25","hashOfConfig":"16"},{"size":768,"mtime":1613234595409,"results":"26","hashOfConfig":"16"},{"size":982,"mtime":1613110035637,"results":"27","hashOfConfig":"16"},{"size":2219,"mtime":1613234426580,"results":"28","hashOfConfig":"16"},{"size":1361,"mtime":1613238165134,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"d17dmm",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\91997\\Desktop\\ProjectIt\\src\\index.js",[],["65","66"],"C:\\Users\\91997\\Desktop\\ProjectIt\\src\\routes.js",[],"C:\\Users\\91997\\Desktop\\ProjectIt\\src\\reportWebVitals.js",[],"C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Home.js",["67","68","69"],"import React from \"react\";\r\nimport \"./Home.css\";\r\nimport Navbar from \"./Common/Navbar\";\r\nimport Footer from \"./Common/Footer\";\r\nimport CardShow from \"./card\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Accordion, Card, Button } from \"react-bootstrap\";\r\nimport Star from \"./images/star.png\";\r\nimport Connect from \"./images/connect.png\";\r\nimport Grow from \"./images/grow.png\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div style={{ backgroundColor: \"#dfeae9\" }} className=\"App\">\r\n      <Navbar logout />\r\n      <div className=\"card-showCase\">\r\n        <Link style={{ textDecoration: \"none\" }} to=\"/project/ml/all\">\r\n          <CardShow title=\"Machine Learning\" img=\"ml\" />\r\n        </Link>\r\n        <Link style={{ textDecoration: \"none\" }} to=\"/project/webd/all\">\r\n          <CardShow title=\"Web Development\" img=\"webd\" />\r\n        </Link>\r\n        <Link style={{ textDecoration: \"none\" }} to=\"/project/appd/all\">\r\n          <CardShow title=\"App Development\" img=\"appd\" />\r\n        </Link>\r\n      </div>\r\n      <hr className=\"custom-hr\" />\r\n      <Container style={{ padding: \"20px\" }}>\r\n        <h1>FAQs</h1>\r\n      </Container>\r\n      <div className=\"Question\">\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              margin: \"auto\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n            className=\"dropQues\"\r\n          >\r\n            <h5>\r\n              <b>\r\n                Why PROJ<span style={{ color: \"orange\" }}>3</span>CT IT?\r\n              </b>\r\n            </h5>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n              <i class=\"fas fa-chevron-circle-down\"></i>\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body className=\"ansCard\">\r\n              As there are more than enough helping guides for learning data\r\n              structures and algorithms as well for learning concepts\r\n              theoretically, but what about practical implementations of those\r\n              concepts. It is a general human tendency to learn things\r\n              practically, hence PROJ3CT IT helps you to find ideas for projects\r\n              and guidance for implementing them. Also you can contact the\r\n              contributor of the project if you have any doubt related to the\r\n              project or for the source code you can refer GitHub repository of\r\n              that project.\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Accordion>\r\n      </div>\r\n      <div className=\"Question\">\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              margin: \"auto\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n            className=\"dropQues\"\r\n          >\r\n            <h5>\r\n              <b>Why should we add our work here?</b>\r\n            </h5>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n              <i class=\"fas fa-chevron-circle-down\"></i>\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body className=\"ansCard\">\r\n              <div className=\"rightImg\">\r\n                <p className=\"answerSec\">\r\n                  <br />\r\n                  <h4\r\n                    style={{ borderLeft: \"4px solid gold\", paddingLeft: \"5px\" }}\r\n                  >\r\n                    Stars on your repository!\r\n                  </h4>\r\n                  Who does not want stars in the repository? As stars are\r\n                  convincing, they are counter and signal positive feedback for\r\n                  your work. As a user, high star count encourages you to check\r\n                  out one project over another. Beyond the fact that a high star\r\n                  count helps a project stand out, they also impact your\r\n                  GitHub’s recommendations. Now you might think, how will\r\n                  PROJ3CT IT help me with that? The answer is simple, as the\r\n                  link to your github repository will be provided. This will\r\n                  direct the audience to your repository. Complete credits will\r\n                  be given to you for your work!\r\n                </p>\r\n                <img style={{ width: \"300px\", height: \"200px\" }} src={Star} />\r\n              </div>\r\n              <div className=\"rightImg\">\r\n                <img\r\n                  style={{ width: \"300px\", height: \"200px\" }}\r\n                  src={Connect}\r\n                />\r\n                <p className=\"answerSec\">\r\n                  <br />\r\n                  <br />\r\n                  <h4\r\n                    style={{ borderLeft: \"4px solid gold\", paddingLeft: \"5px\" }}\r\n                  >\r\n                    Become a part of larger community!\r\n                  </h4>\r\n                  We aim at creating a community of like-minded people.\r\n                  Contributing to this site will make you a part of this venture\r\n                  wherein your projects and ideas combined with somebody else’s\r\n                  skills will result in mutual benefit. Also the audience can\r\n                  directly pitch you through linkedIn and contact you increasing\r\n                  your network all around.\r\n                </p>\r\n              </div>\r\n              <div className=\"rightImg\">\r\n                <p className=\"answerSec\">\r\n                  <br />\r\n                  <h4\r\n                    style={{ borderLeft: \"4px solid gold\", paddingLeft: \"5px\" }}\r\n                  >\r\n                    Grow as a community!\r\n                  </h4>\r\n                  Getting people to contribute to your projects is indeed tough!\r\n                  You would eventually get enthusiastic developers to enhance\r\n                  your project .On the other hand your knowledge would Also get\r\n                  brushed up by explaining your project doubts to them, which\r\n                  results in mutual growth of our wonderful community. If\r\n                  everyone is moving forward together, then success takes care\r\n                  of itself.\r\n                </p>\r\n                <img style={{ width: \"300px\", height: \"200px\" }} src={Grow} />\r\n              </div>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Accordion>\r\n      </div>\r\n      <div className=\"Question\">\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              margin: \"auto\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n            className=\"dropQues\"\r\n          >\r\n            <h5>\r\n              <b>How can we contact the project developer?</b>\r\n            </h5>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n              <i class=\"fas fa-chevron-circle-down\"></i>\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body className=\"ansCard\">\r\n              The beneficiary can have a look at the profile of the contributor,\r\n              where LinkedIn/Github links of the contributor (if provided) are\r\n              available. LinkedIn is considered to be the best source to get\r\n              your queries answered. Also for code specific queries, you can\r\n              have a look at the source code, through the GitHub repository link\r\n              and you can have an one on one interaction with the developer\r\n              which would enhance your developing skills.\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Accordion>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Profile\\Profile.js",["70","71","72","73"],"import React, { Component } from \"react\";\r\nimport \"./Profile.css\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../Common/Navbar\";\r\nimport { useParams, withRouter, Link } from \"react-router-dom\";\r\nimport { Container, Button, } from \"react-bootstrap\";\r\nimport CardProject from \"../Project/CardProject\";\r\nimport image from \".././images/user.png\";\r\n\r\nclass Profile extends Component {\r\n  state = {};\r\n\r\n  fetchData = async () => {\r\n    const username = this.props.match.params.username;\r\n    let url = \"http://localhost:5000/user?c=\" + document.cookie;\r\n    if (username) url = \"http://localhost:5000/user/\" + username;\r\n    await axios.get(url).then((res) => {\r\n      this.setState({\r\n        userDetails: res.data.userDetails,\r\n        projects: res.data.projects,\r\n      });\r\n      console.log(this.state);\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    let userContent, linkedIn, github, proectComponent = (\r\n      <div style={{textAlign: \"center\", marginTop:\"40px\"}}>\r\n        <h4>No projects yet!</h4>\r\n        {this.props.match.params.username === undefined &&\r\n          <Link to=\"/project/add\"><Button variant=\"outline-dark\" className=\"buttonGradient\">Add Project</Button></Link>\r\n        }\r\n      </div>\r\n    )\r\n    if (this.state.userDetails) {\r\n      userContent = (\r\n        <div>\r\n          <h1>{this.state.userDetails.name}</h1>\r\n          <h4>@{this.state.userDetails.username}</h4>\r\n        </div>\r\n      );\r\n      if (this.state.userDetails.linkedIn) {\r\n        linkedIn = (\r\n          <a target=\"_blank\" href={this.state.userDetails.linkedIn} className=\"ic1\">\r\n            <i className=\"fab fa-linkedin\"></i>\r\n          </a>\r\n        );\r\n      }\r\n      if (this.state.userDetails && this.state.userDetails.github) {\r\n        github = (\r\n          <a target=\"_blank\" href={this.state.userDetails.github} className=\"ic1\">\r\n            <i className=\"fab fa-github\"></i>\r\n          </a>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"profileSec\">\r\n        <Navbar />\r\n        <Container>\r\n          <div className=\"identity\">\r\n            <img className=\"userImage\" src={image} />\r\n            <div className=\"hello\">\r\n              {userContent}\r\n              {linkedIn}\r\n              &nbsp; &nbsp;\r\n              {github}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n        <Container className=\"projects-container\">\r\n          <div>\r\n            <h2 style={{ textAlign: \"center\" }}>Projects</h2>\r\n          </div>\r\n          <div>\r\n            {(this.state.projects && this.state.projects.length > 0) ? this.state.projects.map((item) => (\r\n              <CardProject project={item}/>\r\n            )) : proectComponent}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Profile);\r\n","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Project\\AllProjects.js",["74","75","76"],"import React from 'react';\r\nimport { Component } from 'react';\r\nimport { useParams, withRouter } from 'react-router-dom';\r\nimport { findByPlaceholderText } from '@testing-library/react';\r\nimport CardProject from './CardProject';\r\nimport './AllProject.css';\r\nimport Navbar from '../Common/Navbar';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass AllProjects extends Component {\r\n  state = {\r\n    projects: []\r\n  }\r\n\r\n  fetchData = async field => {\r\n    let response = await fetch('http://localhost:5000/project/' + field + '/all', {\r\n      method: 'GET',\r\n      mode: 'cors'\r\n    }).then(response => response.json())\r\n      .then((response) => {\r\n        this.setState({\r\n          projects: response\r\n        })\r\n        console.log(this.state);\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const field = this.props.match.params.field;\r\n    console.log(field);\r\n    this.fetchData(field);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"allProjSec\">\r\n        <Navbar />\r\n        <Container className=\"container\">\r\n          {this.state.projects.map(item =>\r\n            <CardProject project={item} />\r\n          )}\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(AllProjects);","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Project\\Project.js",["77","78","79","80"],"import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\nimport { Link, useParams, withRouter } from \"react-router-dom\";\r\nimport \"./Project.css\";\r\n\r\nclass Project extends Component {\r\n  state = {\r\n    item: {},\r\n  };\r\n\r\n  fetchDetails = async (projectId) => {\r\n    await fetch(\"http://localhost:5000/project/\" + projectId, {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        this.setState({\r\n          item: response,\r\n        });\r\n        console.log(this.state.item);\r\n        console.log(this.state.item.username);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const projectId = this.props.match.params.projectId;\r\n    console.log(projectId);\r\n    this.fetchDetails(projectId);\r\n  }\r\n\r\n  render() {\r\n    let userurl = \"/user/\" + this.state.item.username;\r\n\r\n    return (\r\n      <div className=\"projBlog\">\r\n        {this.state.item.project && (\r\n          <Container className=\"container\">\r\n            <Card className=\"projBox\">\r\n              <div className=\"project-title-div\">\r\n                <div>\r\n                  <h1 className=\"projTitle\">\r\n                    {this.state.item.project.title}&nbsp;&nbsp;&nbsp;\r\n                    {this.state.item.project.github && (\r\n                      <a\r\n                        target=\"_blank\"\r\n                        href={this.state.item.project.github}\r\n                        className=\"ic1\"\r\n                      >\r\n                        <i className=\"fab fa-github\"></i>\r\n                      </a>\r\n                    )}\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n              <div id=\"project-diff\">\r\n                <div className={\"dif \" + this.state.item.project.difficulty}>\r\n                  {this.state.item.project.difficulty}\r\n                </div>\r\n                <Link\r\n                  style={{ textDecoration: \"none\" }}\r\n                  className=\"project-link\"\r\n                  target=\"_blank\"\r\n                  to={userurl}\r\n                >\r\n                  <span className=\"projUser\">~{this.state.item.username}</span>\r\n                </Link>\r\n              </div>\r\n              <hr className=\"custom-hr\" />\r\n              <div>\r\n                <h4 className=\"left-border-heaing\">Description</h4>\r\n                <p className=\"projDesc\">\r\n                  {this.state.item.project.description}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <h4 className=\"left-border-heaing\">Tech Stack</h4>\r\n                <div className=\"techStack\">\r\n                  {this.state.item.project.techStack}\r\n                </div>\r\n              </div>\r\n              {this.state.item.project.hosted && (\r\n                <div>\r\n                  <h4 className=\"left-border-heaing\">View Project</h4>\r\n                  <a target=\"_blank\" href={this.state.item.project.hosted}>\r\n                    <div className=\"readMore\">{this.state.item.project.hosted}</div>\r\n                  </a>\r\n                </div>\r\n              )}\r\n            </Card>\r\n          </Container>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Project;\r\n","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Login\\Login.js",[],"C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Project\\AddProject.js",["81"],"import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport Navbar from \"../Common/Navbar\";\r\nimport \"./AddProjects.css\";\r\n\r\nclass AddProject extends Component {\r\n  state = {\r\n    formDetails: {\r\n      title: \"\",\r\n      description: \"\",\r\n      techStack: \"\",\r\n      github: \"\",\r\n      hosted: \"\",\r\n      difficulty: \"\",\r\n      field: \"\",\r\n    },\r\n    validated: false,\r\n  };\r\n\r\n  changeFieldsHandler = (name) => (event) => {\r\n    let newState = { ...this.state };\r\n    newState.formDetails[name] = event.target.value;\r\n    this.setState(newState);\r\n  };\r\n\r\n  submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    let newState = {...this.state};\r\n    newState.validated = true;\r\n    this.setState(newState);\r\n    let message = <div></div>;\r\n    let url = \"http://localhost:5000/project/add?c=\" + document.cookie;\r\n    console.log(url);\r\n    console.log(this.state);\r\n    await fetch(url, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(this.state.formDetails),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((res) => console.log(res))\r\n      .then(() => {\r\n        this.setState({\r\n          formDetails: {\r\n            title: \"\",\r\n            description: \"\",\r\n            techStack: \"\",\r\n            github: \"\",\r\n            hosted: \"\",\r\n            difficulty: \"\",\r\n            field: \"\",\r\n          },\r\n          validated: false,\r\n        });\r\n        message = <h3 className=\"text-success\">Project Added Successfully!</h3>;\r\n        window.location.reload();\r\n      });\r\n  };\r\n  styling = {\r\n    border: \"0\",\r\n    borderBottom: \"2px solid #c4b6b6\",\r\n    borderRadius: \"0\",\r\n    width: \"670px\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"addprojpage\"\r\n        style={{ backgroundColor: \"#dfeae9\", minHeight: \"100vh\" }}\r\n      >\r\n        <Navbar />\r\n        <message />\r\n        <Container className=\"addContainer\">\r\n          <div className=\"addp\">\r\n            <h2 className=\"loginHead\">Add your Work</h2>\r\n            <Form onSubmit={this.submitHandler}>\r\n              <Form.Group controlId=\"formBasicTitle\">\r\n                <Form.Control\r\n                  required\r\n                  style={{\r\n                    ...this.styling,\r\n                  }}\r\n                  name=\"title\"\r\n                  type=\"title\"\r\n                  placeholder=\"Title\"\r\n                  onChange={this.changeFieldsHandler(\"title\")}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicDescription\">\r\n                <Form.Control\r\n                  required\r\n                  minLength=\"100\"\r\n                  as=\"textarea\"\r\n                  rows={1}\r\n                  style={{\r\n                    ...this.styling,\r\n                  }}\r\n                  name=\"description\"\r\n                  type=\"description\"\r\n                  placeholder=\"Description\"\r\n                  onChange={this.changeFieldsHandler(\"description\")}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicTechStack\">\r\n                <Form.Control\r\n                  required\r\n                  style={{\r\n                    ...this.styling,\r\n                  }}\r\n                  name=\"techStack\"\r\n                  type=\"techStack\"\r\n                  placeholder=\"Tech Stack\"\r\n                  onChange={this.changeFieldsHandler(\"techStack\")}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicGithub\">\r\n                <Form.Control\r\n                  style={{\r\n                    ...this.styling,\r\n                  }}\r\n                  name=\"github\"\r\n                  type=\"github\"\r\n                  placeholder=\"Github\"\r\n                  onChange={this.changeFieldsHandler(\"github\")}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicLink\">\r\n                <Form.Control\r\n                  style={{\r\n                    ...this.styling,\r\n                  }}\r\n                  name=\"hosted\"\r\n                  type=\"hosted\"\r\n                  placeholder=\"Hosted Link\"\r\n                  onChange={this.changeFieldsHandler(\"hosted\")}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicDifficulty\">\r\n                <Form.Control\r\n                  required\r\n                  style={{\r\n                    ...this.styling,\r\n                  }}\r\n                  name=\"difficulty\"\r\n                  type=\"difficulty\"\r\n                  onChange={this.changeFieldsHandler(\"difficulty\")}\r\n                  placeholder=\"Difficulty\"\r\n                  as=\"select\"\r\n                  size=\"sm\"\r\n                >\r\n                  <option value=\"\" disabled selected>\r\n                    Difficulty\r\n                  </option>\r\n                  <option>Beginner</option>\r\n                  <option>Intermediate</option>\r\n                  <option>Expert</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicField\">\r\n                <Form.Control\r\n                  required\r\n                  style={{\r\n                    ...this.styling,\r\n                  }}\r\n                  name=\"field\"\r\n                  type=\"field\"\r\n                  placeholder=\"Field\"\r\n                  onChange={this.changeFieldsHandler(\"field\")}\r\n                  as=\"select\"\r\n                  size=\"sm\"\r\n                >\r\n                  <option value=\"\" disabled selected>\r\n                    Field\r\n                  </option>\r\n                  <option value=\"ml\">Machine Learning</option>\r\n                  <option value=\"webd\">Web Development</option>\r\n                  <option value=\"appd\">App Development</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Button\r\n                className=\"buttonGradient\"\r\n                variant=\"outline-dark\"\r\n                type=\"submit\"\r\n              >\r\n                Add Project\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddProject;\r\n","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Signup\\Signup.js",["82"],"C:\\Users\\91997\\Desktop\\ProjectIt\\src\\card.js",[],"C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Project\\CardProject.js",[],"C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Common\\Navbar.js",["83"],"import React from 'react';\r\nimport axios from 'axios'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport './navbar.css'\r\n\r\nconst navbar = (props) => {\r\n\r\n  const axiosConfig = {\r\n    withCredentials: true,\r\n  };\r\n  const logout = async () => {\r\n    await axios.get(\r\n      \"http://localhost:5000/logout?c=\" + document.cookie\r\n    ).then((res) => {\r\n      console.log(document.cookie);\r\n      document.cookie = \"sessionCookie=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\r\n      console.log(document.cookie);\r\n      var getUrl = window.location;\r\n      var baseUrl = getUrl.protocol + \"//\" + getUrl.host;\r\n      if(res.status === 200){\r\n        console.log(\"Logout is done!\")\r\n        window.location.href = baseUrl + \"/\";\r\n      }\r\n    })\r\n  }\r\n\r\n  let comp = (\r\n    <Nav className=\"login-signup\">\r\n          <Nav.Link className=\"navbar-tags\" href='/login'><i class=\"fas fa-user-lock\"></i> &nbsp; Login</Nav.Link>\r\n          &nbsp;\r\n          &nbsp;\r\n          <Nav.Link className=\"navbar-tags\" href=\"/signup\"><i class=\"fas fa-user-plus\"></i> &nbsp; Signup</Nav.Link>\r\n        </Nav>\r\n  )\r\n\r\n  const cookies  = document.cookie.split(';');\r\n  cookies.forEach((cookie) => {\r\n    if(cookie.split('=')[0].trim() === 'sessionCookie') {\r\n      comp = (\r\n        <Nav className=\"login-signup\">\r\n          <Nav.Link className=\"navbar-tags\" href='/project/add'><i class=\"far fa-plus-square\"></i>&nbsp; Add Project</Nav.Link>\r\n          &nbsp;\r\n          &nbsp;\r\n          <Nav.Link className=\"navbar-tags\" href=\"/profile\"><i class=\"fas fa-user-circle\"></i>&nbsp; Profile</Nav.Link>\r\n          &nbsp;\r\n          &nbsp;\r\n          {props.logout && <Nav.Link className=\"navbar-tags\" onClick={logout}><i class=\"fas fa-sign-out-alt\"></i>&nbsp; Log Out</Nav.Link>}\r\n        </Nav>\r\n      )\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" style={{backgroundColor: \"black\"}} variant=\"dark\">\r\n      <Navbar.Brand className=\"navbar-tags\" href='/'>PROJ<span style={{color: \"orange\"}}>3</span>CT IT</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n      {comp}\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default navbar;","C:\\Users\\91997\\Desktop\\ProjectIt\\src\\Common\\Footer.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":103,"column":17,"nodeType":"90","endLine":103,"endColumn":79},{"ruleId":"88","severity":1,"message":"89","line":106,"column":17,"nodeType":"90","endLine":109,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":142,"column":17,"nodeType":"90","endLine":142,"endColumn":79},{"ruleId":"91","severity":1,"message":"92","line":5,"column":10,"nodeType":"93","messageId":"94","endLine":5,"endColumn":19},{"ruleId":"95","severity":1,"message":"96","line":48,"column":11,"nodeType":"90","endLine":48,"endColumn":85},{"ruleId":"95","severity":1,"message":"96","line":55,"column":11,"nodeType":"90","endLine":55,"endColumn":83},{"ruleId":"88","severity":1,"message":"89","line":66,"column":13,"nodeType":"90","endLine":66,"endColumn":54},{"ruleId":"91","severity":1,"message":"92","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":19},{"ruleId":"91","severity":1,"message":"97","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":31},{"ruleId":"91","severity":1,"message":"98","line":16,"column":9,"nodeType":"93","messageId":"94","endLine":16,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":4,"column":16,"nodeType":"93","messageId":"94","endLine":4,"endColumn":25},{"ruleId":"91","severity":1,"message":"99","line":4,"column":27,"nodeType":"93","messageId":"94","endLine":4,"endColumn":37},{"ruleId":"95","severity":1,"message":"96","line":46,"column":23,"nodeType":"90","endLine":50,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":86,"column":19,"nodeType":"90","endLine":86,"endColumn":76},{"ruleId":"91","severity":1,"message":"100","line":65,"column":9,"nodeType":"93","messageId":"94","endLine":65,"endColumn":16},{"ruleId":"101","severity":1,"message":"102","line":37,"column":29,"nodeType":"103","messageId":"104","endLine":37,"endColumn":31},{"ruleId":"91","severity":1,"message":"105","line":8,"column":9,"nodeType":"93","messageId":"94","endLine":8,"endColumn":20},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'findByPlaceholderText' is defined but never used.","'response' is assigned a value but never used.","'withRouter' is defined but never used.","'message' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axiosConfig' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]